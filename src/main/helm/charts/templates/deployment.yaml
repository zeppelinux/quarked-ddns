apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "${project.build.finalName}.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    helm.sh/chart: {{ include "${project.build.finalName}.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
                  {{- if (.Values.debugAndProfiling.enabled) }}
            - name: jvmCmdLineArguments
              value: -agentlib:jdwp=transport=dt_socket\,server=y\,suspend=n\,address=5005 {{ .Values.debugAndProfiling.jvmCmdLineArguments }}
                  {{- end}}
            - name: logLevel
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: logLevel
            - name: qddns.ipCheckInterval
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: qddns.ipCheckInterval
            - name: qddns.routerIP
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: qddns.routerIP
            - name: route53.region
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: route53.region
            - name: route53.domain
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: route53.domain
            - name: route53.hostedZoneId
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}
                  key: route53.hostedZoneId
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: quarked-ddns
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: quarked-ddns
                  key: AWS_SECRET_KEY
          {{- if .Values.healthChecks.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.liveness.periodSeconds }}
            failureThreshold: {{ .Values.healthChecks.liveness.failureThreshold }}
          {{- end}}
          {{- if .Values.healthChecks.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.readiness.periodSeconds }}
            failureThreshold: {{ .Values.healthChecks.readiness.failureThreshold }}
          {{- end}}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
    {{- if .Values.healthChecks.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.liveness.periodSeconds }}
            failureThreshold: {{ .Values.healthChecks.liveness.failureThreshold }}
    {{- end}}
    {{- if .Values.healthChecks.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: {{ .Values.healthChecks.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthChecks.readiness.periodSeconds }}
            failureThreshold: {{ .Values.healthChecks.readiness.failureThreshold }}
    {{- end}}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
